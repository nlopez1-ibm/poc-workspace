## NJL _Mods


###
# FOR WAZI TRESTING OVERRIDE SYSTEM LIBS
# overrides to run on wazi box

SIGYCOMP_V6=IGY.V6R3M0.SIGYCOMP
SIGYCOMP_V4=IGY.V6R3M0.SIGYCOMP

# CEE libs
SCEEMAC=CEE.SCEEMAC
SCEELKED=CEE.SCEELKED

# High Level Assembler (HLASM) load library. Example: ASM.SASMMOD1
SASMMOD1=ASM.SASMMOD1
MACLIB=SYS1.MACLIB

# Cobol Compiler Data Sets. Example: COBOL.V4R1M0.SIGYCOMP
# note use v6 for v4 to simulate v4 testing see cobol_v4.groovy
SIGYCOMP_V4=IGY.V6R3M0.SIGYCOMP
SIGYCOMP_V6=IGY.V6R3M0.SIGYCOMP

# CICS Macro Library. Example: CICSTS.V3R2M0.CICS.SDFHMAC
SDFHMAC=CICSTS.V5R6M0.CICS.SDFHMAC
SDFHLOAD=CICSTS.V5R6M0.CICS.SDFHLOAD
SDFHCOB=CICSTS.V5R6M0.CICS.SDFHCOB

# MQ COBOL Libs    CANT FIND MQ LIBS ON WAZI  USED CICS LIBS FOR NOW
SCSQCOBC=CICSTS.V5R6M0.CICS.SDFHCOB
SCSQLOAD=CICSTS.V5R6M0.CICS.SDFHLOAD

# DB2 Libs
SDSNLOAD=DB2.V12R1M0.SDSNLOAD


# PL/I Compiler Data Sets.  Example: PLI.V5R2M0.SIBMZCMP
IBMZPLI_V52=IEL530.SIBMZCMP
IBMZPLI_V51=

###

# for scripted deployments dont create a subfolder for dbb artifacts 
# njl - shutdow for BDB test backlevel pack ucd v2
createBuildOutputSubfolder=false
#createBuildOutputSubfolder=true
 
# other misc stuff
publish=true   
artifactory_url=https://eu.artifactory.swg-devops.com/artifactory
artifactory_repo=sys-dat-team-generic-local
loadDatsets=${hlq}.load


# njl - example of new Audit reporting feature option -re -v in build.groovy
# create zTest repor for testing this feature - WIP 
## reportExternalImpactsAnalysisDepths=deep     
## reportExternalImpactsCollectionPatterns=z,p
## reportExternalImpactsAnalysisFileFilter=d*



## new code for optional ssi/identify binder cards - see cobol.groovy for implem
## Note- User build does not use Git Based info will use user/and?   
binder_ssi=12345678
##SEE lang.prog for linkedit card and IDENTIFY option   


## njl - example not in effect added  deploy props for CICS and DB2
## scripted deply points to rpl on t6031
#tvt6031_cics_cicsplex=CICS01
#tvt6031_cics_cmciport=1490
#cics_rpl=DAT.CICS.LOAD

# See bind.props for DB2 Options

## njl - added isMQ for demo- any folder with mq in its name
## note dbb 1.2 now support MQ calls - pending test   
#isMQ = true :: **/mq-pgms/*.cbl
isCICS = true :: **/my-special-cics-pgms/*.cbl







## NJL - example file mapping of a dual mode folder (GLOB pattern)
## Note: When enabled 2 load PDS's are used see build-conf/Cobol.properties 
isDual = true :: **/cobol-dual/*.cbl


# used to ...
applicationPropFiles=file.properties,BMS.properties,Assembler.properties,Cobol.properties,LinkEdit.properties,bind.properties,Transfer.properties,Cpp.properties


# added a all share/common repos that are part of your applicaitons configuration 
applicationSrcDirs=${application},Common/common-source/copybook



#njl moved buildOrder to file.properties 


# The main build branch.  Used for cloning collections for new branch builds instead
# of rescanning the entire application.
mainBuildBranch=main

#
# exclude list used when scanning or running full build
excludeFileList=.*,**/*.properties,**/*.xml,**/*.groovy,**/*.md,**/application-conf/*.*

#
# Impact analysis resolution rules (JSON format)
#impactResolutionRules=[${cppRule},${copybookRule},${bmsRule},${linkRule},${maclibRule}]
impactResolutionRules=[${cppRule}]


# njl - Rule to locate cpp headers 
cppRule = [{"library": "SYSLIB", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/header"} \
                  ] \
          }]



# Rule to locate Cobol copy books
copybookRule = {"library": "SYSLIB", \
                  "searchPath": [ \                    
                    {"sourceDir": "${workspace}", "directory": "${application}/copybook"}, \                    
                    {"sourceDir": "${workspace}", "directory": "${application}/dclgen"}, \
                    {"sourceDir": "${workspace}", "directory": "Common/common-source/copybook"} \                    
                 ] \
               }



bmsRule =   {"library": "SYSLIB", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/bms"} \
              ] \
            }


maclibRule = {"library": "SYSLIB", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/maclib"} \
                 ] \
               }

##maclibRule = {["library": "SYSLIB",
##     "category":"COPY", "searchPath":[{"sourceDir":"${workspace}","directory":"${application}/maclib"}] }   
#               "category":"MACRO","searchPath":[{"sourceDir":"${workspace}","directory":"${application}/maclib"}] \



# Rule to locate COBOL programs and Link files for rebuilding statically linked load modules
# njl Orig Def
linkRule =   {"category": "LINK", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/cobol"}, \
                 {"sourceDir": "${workspace}", "directory": "${application}/link"} \
              ] \
            }


